{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","URL_REGEX","RegExp","r","source","join","NewMovie","state","titleIsValid","descriptionIsValid","imgIsValid","imdbLinkIsValid","imdbIdIsValid","validateTitle","length","trim","setState","validateDescription","validateImageUrl","test","validateImdbUrl","validateImdbIdl","submitHandler","event","preventDefault","setTimeout","props","onAdd","type","name","value","this","onBlur","onChange","target","onClick","Component","App","moviesFromServer","addMovie","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa802208.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { Component } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\ntype State = {\n  title: string;\n  description: string;\n  imgUrl: string;\n  imdbUrl: string;\n  imdbId: string;\n  titleIsValid: boolean;\n  descriptionIsValid: boolean;\n  imgIsValid: boolean;\n  imdbLinkIsValid: boolean;\n  imdbIdIsValid: boolean;\n};\n\nconst URL_REGEX = new RegExp([\n  /(?:(?:(https?|ftp):)?\\/\\/)/,\n  /(?:([^:\\n\\r]+):([^@\\n\\r]+)@)?/,\n  /(?:(?:www\\.)?([^/\\n\\r]+))/,\n  /(\\/[^?\\n\\r]+)?/,\n  /(\\?[^#\\n\\r]*)?/,\n  /(#?[^\\n\\r]*)?/,\n].map(\n  (r) => {\n    return r.source;\n  },\n).join(''));\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    titleIsValid: true,\n    descriptionIsValid: true,\n    imgIsValid: true,\n    imdbLinkIsValid: true,\n    imdbIdIsValid: true,\n  };\n\n  validateTitle = () => {\n    if (this.state.title.length === 0 || this.state.title.trim() === '') {\n      this.setState({\n        titleIsValid: false,\n      });\n    }\n  };\n\n  validateDescription = () => {\n    if (this.state.description.length === 0\n      || this.state.description.trim() === '') {\n      this.setState({\n        descriptionIsValid: false,\n      });\n    }\n  };\n\n  validateImageUrl = () => {\n    if (URL_REGEX.test(this.state.imgUrl) === false) {\n      this.setState({\n        imgIsValid: false,\n      });\n    }\n  };\n\n  validateImdbUrl = () => {\n    if (URL_REGEX.test(this.state.imdbUrl) === false) {\n      this.setState({\n        imdbLinkIsValid: false,\n      });\n    }\n  };\n\n  validateImdbIdl = () => {\n    if (this.state.imdbId.length === 0\n      || this.state.imdbId.trim() === '') {\n      this.setState({\n        imdbIdIsValid: false,\n      });\n    }\n  };\n\n  submitHandler = (event:React.SyntheticEvent<EventTarget>) => {\n    event.preventDefault();\n    this.validateTitle();\n    this.validateDescription();\n    this.validateImageUrl();\n    this.validateImdbIdl();\n    this.validateImdbUrl();\n    setTimeout(() => {\n      if (this.state.titleIsValid && this.state.descriptionIsValid\n        && this.state.imgIsValid && this.state.imdbLinkIsValid\n        && this.state.imdbIdIsValid) {\n        this.props.onAdd({\n          title: this.state.title,\n          description: this.state.description,\n          imgUrl: this.state.imgUrl,\n          imdbUrl: this.state.imdbUrl,\n          imdbId: this.state.imdbId,\n\n        });\n\n        this.setState({\n          title: '',\n          description: '',\n          imgUrl: '',\n          imdbUrl: '',\n          imdbId: '',\n        });\n      }\n    }, 0);\n  };\n\n  render() {\n    return (\n      <form className=\"form\">\n        <label>\n          Title\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={this.state.title}\n            onBlur={this.validateTitle}\n            onChange={(event) => {\n              this.setState({\n                title: event.target.value,\n                titleIsValid: true,\n              });\n            }}\n            className={!this.state.titleIsValid ? 'invalid' : ''}\n          />\n        </label>\n        <div className=\"error\">\n          {!this.state.titleIsValid ? 'This field must not be empty' : ''}\n        </div>\n        <label>\n          Description\n          <input\n            type=\"text\"\n            name=\"description\"\n            onBlur={this.validateDescription}\n            value={this.state.description}\n            onChange={(event) => {\n              this.setState({\n                description: event.target.value,\n                descriptionIsValid: true,\n              });\n            }}\n            className={!this.state.descriptionIsValid ? 'invalid' : ''}\n          />\n        </label>\n        <div className=\"error\">\n          {!this.state.descriptionIsValid ? 'This field must not be empty' : ''}\n        </div>\n        <label>\n          Image link\n          <input\n            type=\"text\"\n            name=\"imgUrl\"\n            onBlur={this.validateImageUrl}\n            value={this.state.imgUrl}\n            onChange={(event) => {\n              this.setState({\n                imgUrl: event.target.value,\n                imgIsValid: true,\n              });\n            }}\n            className={!this.state.imgIsValid ? 'invalid' : ''}\n          />\n        </label>\n        <div className=\"error\">\n          {!this.state.imgIsValid ? 'Please enter the valid URL' : ''}\n        </div>\n        <label>\n          IMDB link\n          <input\n            type=\"text\"\n            name=\"imdbUrl\"\n            onBlur={this.validateImdbUrl}\n            value={this.state.imdbUrl}\n            onChange={(event) => {\n              this.setState({\n                imdbUrl: event.target.value,\n                imdbLinkIsValid: true,\n              });\n            }}\n            className={!this.state.imdbLinkIsValid ? 'invalid' : ''}\n          />\n          <div className=\"error\">\n            {!this.state.imdbLinkIsValid ? 'Please enter the valid URL' : ''}\n          </div>\n        </label>\n        <label>\n          IMDB ID\n          <input\n            type=\"text\"\n            name=\"imdbId\"\n            value={this.state.imdbId}\n            onChange={(event) => {\n              this.setState({\n                imdbId: event.target.value,\n                imdbIdIsValid: true,\n              });\n            }}\n            className={!this.state.imdbIdIsValid ? 'invalid' : ''}\n          />\n        </label>\n        <div className=\"error\">\n          {!this.state.imdbIdIsValid ? 'This field must not be empty' : ''}\n        </div>\n        <button\n          type=\"submit\"\n          className={\n            !(this.state.titleIsValid && this.state.descriptionIsValid\n              && this.state.imgIsValid && this.state.imdbLinkIsValid\n              && this.state.imdbIdIsValid)\n              ? 'disable' : ''\n          }\n          onClick={this.submitHandler}\n        >\n          Submit\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState((state) => {\n      return {\n        movies: [\n          ...state.movies,\n          movie,\n        ],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}